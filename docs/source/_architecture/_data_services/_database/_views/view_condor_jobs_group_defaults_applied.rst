.. File generated by /opt/cloudscheduler/utilities/schema_doc - DO NOT EDIT
..
.. To modify the contents of this file:
..   1. edit the template file ".../cloudscheduler/docs/schema_doc/views/view_condor_jobs_group_defaults_applied.yaml"
..   2. run the utility ".../cloudscheduler/utilities/schema_doc"
..

Database View: view_condor_jobs_group_defaults_applied
======================================================

.. _view_cloud_status: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_cloud_status.html

.. _view_cloud_status_slot_detail: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_cloud_status_slot_detail.html

.. _view_job_status: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_job_status.html

.. _view_condor_jobs_group_defaults_applied: https://cloudscheduler.readthedocs.io/en/latest/_architecture/_data_services/_database/_views/view_condor_jobs_group_defaults_applied.html

This view is one of a suite of related views used by
the time series poller to populate the time serioes (influxDB) database. The
suite includes:

#. view_cloud_status_

#. view_cloud_status_slot_detail_

#. view_condor_jobs_group_defaults_applied_

#. view_job_status_

The **view_condor_jobs_group_defaults_applied** lists all jobs together with the group default resource requests
(cpu, disk, RAM, and swp) if the job resource requests are missing.
This view also provides an interpretation of the **job_status** field appending the
'js_xxxx' fields (see below).


Columns:
^^^^^^^^

* **global_job_id** (String(128)):

      The global unique identifer of the job classad as defined by condor.
      Is the global job ID assigned by HTCondor.

* **group_name** (String(32)):

      The CSV2 name of the group that owns the job.

* **target_alias** (String(32)):


* **job_status** (Integer):

      Is the current HTCondor status code for the job which indicates states
      such as idle, running, completed, etc.

* **request_cpus** (Integer):

      Is the number of CPUs requested by the job.

* **request_disk** (Integer):

      Is the number of gigabytes of disk requested by the job.

* **request_ram** (Integer):

      Is the number of megabytes of RAM requested by the job.

* **request_swap** (Integer):

      Is the number of gigabytes of swap space requested by the job.

* **requirements** (String(512)):

      Is the HTCondor job requirements string. This value is generated by CSV2
      to ensure that HTCondor selects the correct VM for a job.

* **job_priority** (Integer):

      Is the numerical priority of the job. Lower numbers have higher priority.`

* **cluster_id** (Integer):

      The HTCondor assigned cluster ID for the job which forms part of
      the HTCondor global job ID..

* **proc_id** (Integer):

      The HTCondor assigned process ID for the job which forms part of
      the HTCondor global job ID..

* **user** (String(512)):

      The user ID of the submitting user. They must be a member
      of the group or authorized by the group to submit jobs.

* **image** (String):

      The name of the (kernel) image to be used to run the
      job.

* **instance_type** (String(512)):

      The name of the flavor (instance type) to be used to run
      the job.

* **network** (String(512)):

      The name of the networj to be used to run the job.

* **keep_alive** (String(512)):

      The number of seconds the VM should be maintained following job completion.

* **max_price** (String(512)):

      Is the maximum price, in cents, to bid for VMs on the
      spot market.

* **user_data** (String(512)):

      This deprecated field can contain a string used to contextualize a VM
      during instantiation. You should use a combination of metadat files instead.

* **job_per_core** (Integer):

      This job parameter specifies whether each CPU within a VM can run
      a job (ie. the VM can run multiple jobs concurrently) or whether
      all the CPUs within a VM should be used to run a
      single job.

* **entered_current_status** (Integer):

      The HTCondor timestamp of when the job state last changed.

* **q_date** (Integer):

      The HTCondor timestamp of when the job entered the job queue.

* **hold_job_reason** (String(64)):

      This field is used by CSV2 to cause a job to be
      held and will contain a string indicating CSV2's reason for the action.

* **held_reason** (String(512)):

      if a job has been held by CSV2, this field will maintain
      the the reason CSV2 took that action.

* **js_idle** (Integer):

      Is set to 1 if the **job_status** field is 1, indicating that
      the job is 'idle'. Otherwise, the field is set to 0.

* **js_running** (Integer):

      Is set to 1 if the **job_status** field is 2, indicating that
      the job is 'running'. Otherwise, the field is set to 0.

* **js_completed** (Integer):

      Is set to 1 if the **job_status** field is 4, indicating that
      the job is 'completed'. Otherwise, the field is set to 0.

* **js_held** (Integer):

      Is set to 1 if the **job_status** field is 5, indicating that
      the job is 'held'. Otherwise, the field is set to 0.

* **js_other** (Integer):

      Is set to 1 if the **job_status** field is either 0, 3,
      or 6. Otherwise, the field is set to 0.

