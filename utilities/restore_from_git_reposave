#!/usr/bin/env python3
from subprocess import Popen, PIPE
import shutil
import sys
import os

if len(sys.argv) < 2:
    print("Synopsis: restore_from_git_reposave <git_reposave_sub_directory>")
    exit(0)

words = os.path.dirname(os.path.realpath(sys.argv[0])).split('/')
words_ix = words.index('cloudscheduler')
home_dir = '/'.join(words[:words_ix+1])

if not os.path.isdir('%s/git_reposave/%s' % (home_dir, sys.argv[1])):
   print('ERROR: Sprecified sub-directory "%s" does not exist.' % sys.argv[0])
   exit(1)

current_dir = '%s/git_reposave/%s' % (home_dir, sys.argv[1])
if os.path.isfile('%s/deleted_file_list' % current_dir):
    with open('%s/git_reposave/%s/deleted_file_list' % (home_dir, sys.argv[1])) as fd:
        delstring = fd.read()

    dels = delstring.split('\n')
    for file in dels:
        if file != '':
            deleted_file = '%s/%s' % (home_dir, file)
            try:
                os.unlink(deleted_file)
            except:
                pass
p = Popen([
    'find',
    '-type',
    'f'
    ], cwd=current_dir, stdout=PIPE, stderr=PIPE)
stdout, stderr = p.communicate()

if p.returncode == 0:
    mods = stdout.decode('utf-8').split('\n')
    for file in mods:
        if file != '' and file[2:] != 'deleted_file_list' and file not in dels:
            src = '%s/%s' % (current_dir, file[2:])
            dst = '%s/%s' % (home_dir, file[2:])
            shutil.copyfile(src, dst)
